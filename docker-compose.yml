version: '3'

services:
  nodeserver:
    image: nodejs
    build:
      context: ./got
    depends_on:
      - mongo
    #env_file: 
    #  - .env
    #environment: 
    #  - MONGO_USERNAME=root
    #  - MONGO_PASSWORD=secret
    #  - MONGO_HOSTNAME=db
    #  - MONGO_PORT=27017
    #  - MONGO_DB=got
    ports:
      - "5005:5000"
  mongo:
    image: mongo:3.2.4
    restart: always
    #env_file: 
    #  - .env
    #environment:
    #  - MONGO_INITDB_ROOT_USERNAME=root
    #  - MONGO_INITDB_ROOT_PASSWORD=secret
    #  - MONGO_INITDB_DATABASE=got
    networks: 
      - mongoGot-network
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - ./mongo-data:/data/db
    command: mongod
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo
    networks: 
      - mongoGot-network
    #environment: 
    #  ME_CONFIG_MONGODB_SERVER: mongo
    #  ME_CONFIG_MONGODB_ADMINUSERNAME: root
    #  ME_CONFIG_MONGODB_ADMINPASSWORD: secret
    #  ME_CONFIG_BASICAUTH_USERNAME: root
    #  ME_CONFIG_BASICAUTH_PASSWORD: secret
    #  ME_CONFIG_BASICAUTH_DATABASE: got
    ports:
      - "8081:8081"
    volumes:
      - ./mongo-data:/data/db
    links:
      - mongo
    depends_on: 
      - mongo
  nginx:
    image: nginx
    restart: always 
    build:
      context: ./nginx
    ports:
      - "80:80" 
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
volumes:
  mongo-data: 
networks:
  mongoGot-network:
    driver: bridge